function [g, h_i, grad_g, grad_h] = nonlinear_constraints(x)
    % First convert the input vector to variables in the problem
    b = x(1);
    h = x(2);
    
    % Then use a script to read in all parameters
    parameters;
    
    % Now, construct the constraints under g
    g(1) = 1E-2 * (1 - (4*D_a*E*b*h^3)/(L^3 * (P+(5/8)*q*L)));
    g(2) = 1E-2 * (1 - (4*sigma_a*b*h^2)/(3*L*(2*P+L*q)));
    g(3) = 1E-9 * ...
        (P + q*L - 4.013*sqrt(0.312*h^4*b^4*G*E)/(L^2*sqrt(12)));
    g(4) = 1E-9 * ...
        (P + q*L - 4.013*sqrt(0.312*h^2*b^6*G*E)/(L^2*sqrt(12)));
    
    % now, return the equality constraints h_i
    h_i = [];
    
    % For later, we take the gradient of g (and h_i)
    grad_g = ...
        [-1E-2*(4*D_a*E*h^3)/(L^3*(P+(5/8)*q*L)), ...
            -1E-2*(12*D_a*E*b*h^2)/(L^3*(P+(5/8)*q*L)); ...
         -1E-2*(4*sigma_a*h^2)/(3*L*(P+(5/8)*q*L)), ...
            -1E-2*(8*sigma_a*b*h)/(3*L*(P+(5/8)*q*L)); ...
         -1E-9*(2*4.013*b*sqrt(0.312*h^4*G*E))/(L^2*sqrt(12)), ...
            -1E-9*(2*4.013*h*sqrt(0.312*b^4*G*E))/(L^2*sqrt(12)); ...
         -1E-9*(3*4.013*b^2*sqrt(0.312*h^2*G*E))/(L^2*sqrt(12)), ...
            -1E-9*(4.013*sqrt(0.312*b^6*G*E))/(L^2*sqrt(12))];
    grad_g = grad_g';
    grad_h = [];
end